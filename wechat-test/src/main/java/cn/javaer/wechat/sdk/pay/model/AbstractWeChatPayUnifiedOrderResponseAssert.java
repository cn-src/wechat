package cn.javaer.wechat.sdk.pay.model;

import org.assertj.core.api.AbstractObjectAssert;
import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link WeChatPayUnifiedOrderResponse} specific assertions - Generated by CustomAssertionGenerator.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public abstract class AbstractWeChatPayUnifiedOrderResponseAssert<S extends AbstractWeChatPayUnifiedOrderResponseAssert<S, A>, A extends WeChatPayUnifiedOrderResponse> extends AbstractObjectAssert<S, A> {

  /**
   * Creates a new <code>{@link AbstractWeChatPayUnifiedOrderResponseAssert}</code> to make assertions on actual WeChatPayUnifiedOrderResponse.
   * @param actual the WeChatPayUnifiedOrderResponse we want to make assertions on.
   */
  protected AbstractWeChatPayUnifiedOrderResponseAssert(A actual, Class<S> selfType) {
    super(actual, selfType);
  }

  /**
   * Verifies that the actual WeChatPayUnifiedOrderResponse's codeUrl is equal to the given one.
   * @param codeUrl the given codeUrl to compare the actual WeChatPayUnifiedOrderResponse's codeUrl to.
   * @return this assertion object.
   * @throws AssertionError - if the actual WeChatPayUnifiedOrderResponse's codeUrl is not equal to the given one.
   */
  public S hasCodeUrl(String codeUrl) {
    // check that actual WeChatPayUnifiedOrderResponse we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting codeUrl of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // null safe check
    String actualCodeUrl = actual.getCodeUrl();
    if (!Objects.areEqual(actualCodeUrl, codeUrl)) {
      failWithMessage(assertjErrorMessage, actual, codeUrl, actualCodeUrl);
    }

    // return the current assertion for method chaining
    return myself;
  }

  /**
   * Verifies that the actual WeChatPayUnifiedOrderResponse's prepayId is equal to the given one.
   * @param prepayId the given prepayId to compare the actual WeChatPayUnifiedOrderResponse's prepayId to.
   * @return this assertion object.
   * @throws AssertionError - if the actual WeChatPayUnifiedOrderResponse's prepayId is not equal to the given one.
   */
  public S hasPrepayId(String prepayId) {
    // check that actual WeChatPayUnifiedOrderResponse we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting prepayId of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // null safe check
    String actualPrepayId = actual.getPrepayId();
    if (!Objects.areEqual(actualPrepayId, prepayId)) {
      failWithMessage(assertjErrorMessage, actual, prepayId, actualPrepayId);
    }

    // return the current assertion for method chaining
    return myself;
  }

}
