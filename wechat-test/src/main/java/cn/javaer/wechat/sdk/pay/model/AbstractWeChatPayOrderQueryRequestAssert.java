package cn.javaer.wechat.sdk.pay.model;

import org.assertj.core.util.Objects;

/**
 * Abstract base class for {@link WeChatPayOrderQueryRequest} specific assertions - Generated by CustomAssertionGenerator.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public abstract class AbstractWeChatPayOrderQueryRequestAssert<S extends AbstractWeChatPayOrderQueryRequestAssert<S, A>, A extends WeChatPayOrderQueryRequest> extends AbstractWeChatPayRequestAssert<S, A> {

  /**
   * Creates a new <code>{@link AbstractWeChatPayOrderQueryRequestAssert}</code> to make assertions on actual WeChatPayOrderQueryRequest.
   * @param actual the WeChatPayOrderQueryRequest we want to make assertions on.
   */
  protected AbstractWeChatPayOrderQueryRequestAssert(A actual, Class<S> selfType) {
    super(actual, selfType);
  }

  /**
   * Verifies that the actual WeChatPayOrderQueryRequest's outTradeNo is equal to the given one.
   * @param outTradeNo the given outTradeNo to compare the actual WeChatPayOrderQueryRequest's outTradeNo to.
   * @return this assertion object.
   * @throws AssertionError - if the actual WeChatPayOrderQueryRequest's outTradeNo is not equal to the given one.
   */
  public S hasOutTradeNo(String outTradeNo) {
    // check that actual WeChatPayOrderQueryRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting outTradeNo of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // null safe check
    String actualOutTradeNo = actual.getOutTradeNo();
    if (!Objects.areEqual(actualOutTradeNo, outTradeNo)) {
      failWithMessage(assertjErrorMessage, actual, outTradeNo, actualOutTradeNo);
    }

    // return the current assertion for method chaining
    return myself;
  }

  /**
   * Verifies that the actual WeChatPayOrderQueryRequest's transactionId is equal to the given one.
   * @param transactionId the given transactionId to compare the actual WeChatPayOrderQueryRequest's transactionId to.
   * @return this assertion object.
   * @throws AssertionError - if the actual WeChatPayOrderQueryRequest's transactionId is not equal to the given one.
   */
  public S hasTransactionId(String transactionId) {
    // check that actual WeChatPayOrderQueryRequest we want to make assertions on is not null.
    isNotNull();

    // overrides the default error message with a more explicit one
    String assertjErrorMessage = "\nExpecting transactionId of:\n  <%s>\nto be:\n  <%s>\nbut was:\n  <%s>";

    // null safe check
    String actualTransactionId = actual.getTransactionId();
    if (!Objects.areEqual(actualTransactionId, transactionId)) {
      failWithMessage(assertjErrorMessage, actual, transactionId, actualTransactionId);
    }

    // return the current assertion for method chaining
    return myself;
  }

}
